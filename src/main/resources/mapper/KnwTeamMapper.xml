<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.knw.dao.KnwTeamMapper">
  <resultMap id="BaseResultMap" type="com.example.knw.pojo.KnwTeam">
    <id column="team_id" jdbcType="INTEGER" property="teamId" />
    <result column="team_name" jdbcType="VARCHAR" property="teamName" />
    <result column="team_is_activate" jdbcType="TINYINT" property="teamIsActivate" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="leader_id" jdbcType="INTEGER" property="leaderId" />
    <result column="brief" jdbcType="VARCHAR" property="brief" />
    <result column="institute" jdbcType="VARCHAR" property="institute" />
    <result column="resource_size" jdbcType="REAL" property="resourceSize" />
    <result column="used_size" jdbcType="REAL" property="usedSize" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    team_id, team_name, team_is_activate, create_time, leader_id, brief, institute, resource_size, 
    used_size
  </sql>
  <select id="selectByExample" parameterType="com.example.knw.pojo.KnwTeamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from knw_team
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from knw_team
    where team_id = #{teamId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from knw_team
    where team_id = #{teamId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.knw.pojo.KnwTeamExample">
    delete from knw_team
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.knw.pojo.KnwTeam">
    insert into knw_team (team_id, team_name, team_is_activate, 
      create_time, leader_id, brief, 
      institute, resource_size, used_size
      )
    values (#{teamId,jdbcType=INTEGER}, #{teamName,jdbcType=VARCHAR}, #{teamIsActivate,jdbcType=TINYINT}, 
      #{createTime,jdbcType=DATE}, #{leaderId,jdbcType=INTEGER}, #{brief,jdbcType=VARCHAR}, 
      #{institute,jdbcType=VARCHAR}, #{resourceSize,jdbcType=REAL}, #{usedSize,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.knw.pojo.KnwTeam">
    insert into knw_team
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teamId != null">
        team_id,
      </if>
      <if test="teamName != null">
        team_name,
      </if>
      <if test="teamIsActivate != null">
        team_is_activate,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="leaderId != null">
        leader_id,
      </if>
      <if test="brief != null">
        brief,
      </if>
      <if test="institute != null">
        institute,
      </if>
      <if test="resourceSize != null">
        resource_size,
      </if>
      <if test="usedSize != null">
        used_size,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teamId != null">
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="teamName != null">
        #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="teamIsActivate != null">
        #{teamIsActivate,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="leaderId != null">
        #{leaderId,jdbcType=INTEGER},
      </if>
      <if test="brief != null">
        #{brief,jdbcType=VARCHAR},
      </if>
      <if test="institute != null">
        #{institute,jdbcType=VARCHAR},
      </if>
      <if test="resourceSize != null">
        #{resourceSize,jdbcType=REAL},
      </if>
      <if test="usedSize != null">
        #{usedSize,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.knw.pojo.KnwTeamExample" resultType="java.lang.Long">
    select count(*) from knw_team
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update knw_team
    <set>
      <if test="record.teamId != null">
        team_id = #{record.teamId,jdbcType=INTEGER},
      </if>
      <if test="record.teamName != null">
        team_name = #{record.teamName,jdbcType=VARCHAR},
      </if>
      <if test="record.teamIsActivate != null">
        team_is_activate = #{record.teamIsActivate,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.leaderId != null">
        leader_id = #{record.leaderId,jdbcType=INTEGER},
      </if>
      <if test="record.brief != null">
        brief = #{record.brief,jdbcType=VARCHAR},
      </if>
      <if test="record.institute != null">
        institute = #{record.institute,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceSize != null">
        resource_size = #{record.resourceSize,jdbcType=REAL},
      </if>
      <if test="record.usedSize != null">
        used_size = #{record.usedSize,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update knw_team
    set team_id = #{record.teamId,jdbcType=INTEGER},
      team_name = #{record.teamName,jdbcType=VARCHAR},
      team_is_activate = #{record.teamIsActivate,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=DATE},
      leader_id = #{record.leaderId,jdbcType=INTEGER},
      brief = #{record.brief,jdbcType=VARCHAR},
      institute = #{record.institute,jdbcType=VARCHAR},
      resource_size = #{record.resourceSize,jdbcType=REAL},
      used_size = #{record.usedSize,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.knw.pojo.KnwTeam">
    update knw_team
    <set>
      <if test="teamName != null">
        team_name = #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="teamIsActivate != null">
        team_is_activate = #{teamIsActivate,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="leaderId != null">
        leader_id = #{leaderId,jdbcType=INTEGER},
      </if>
      <if test="brief != null">
        brief = #{brief,jdbcType=VARCHAR},
      </if>
      <if test="institute != null">
        institute = #{institute,jdbcType=VARCHAR},
      </if>
      <if test="resourceSize != null">
        resource_size = #{resourceSize,jdbcType=REAL},
      </if>
      <if test="usedSize != null">
        used_size = #{usedSize,jdbcType=REAL},
      </if>
    </set>
    where team_id = #{teamId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.knw.pojo.KnwTeam">
    update knw_team
    set team_name = #{teamName,jdbcType=VARCHAR},
      team_is_activate = #{teamIsActivate,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=DATE},
      leader_id = #{leaderId,jdbcType=INTEGER},
      brief = #{brief,jdbcType=VARCHAR},
      institute = #{institute,jdbcType=VARCHAR},
      resource_size = #{resourceSize,jdbcType=REAL},
      used_size = #{usedSize,jdbcType=REAL}
    where team_id = #{teamId,jdbcType=INTEGER}
  </update>
</mapper>